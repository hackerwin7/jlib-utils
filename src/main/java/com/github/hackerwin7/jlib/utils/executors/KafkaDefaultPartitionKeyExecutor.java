package com.github.hackerwin7.jlib.utils.executors;

import org.apache.commons.lang3.StringUtils;

import java.util.Random;

/**
 * Created by IntelliJ IDEA.
 * User: hackerwin7
 * Date: 2015/12/17
 * Time: 11:45 AM
 * Desc:
 */
public class KafkaDefaultPartitionKeyExecutor {
    public static void main(String[] args) throws Exception {
        String ss
        String[] ssArr = StringUtils.split(ss, ",");
        for(String id : ssArr) {
            System.out.println(id + " => " + new kafka.producer.DefaultPartitioner(null).partition(id, 8));
        }
    }

    public static int partition(String key, int numPartitions) {
        if(StringUtils.isBlank(key))
            return new Random().nextInt(numPartitions);
        else
            return Math.abs(key.hashCode()) % numPartitions;
    }
}
